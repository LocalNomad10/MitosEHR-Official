<?php
//--------------------------------------------------------------------------------------------------------------------------
// data_create.ejs.php
// v0.0.2
// Under GPLv3 License
//
// Integrated by: GI Technologies Inc. in 2011
//
// Remember, this file is called via the Framework Store, this is the AJAX thing.
//--------------------------------------------------------------------------------------------------------------------------

session_name ( "MitosEHR" );
session_start();
session_cache_limiter('private');

include_once("library/dbHelper/dbHelper.inc.php");
include_once("library/I18n/I18n.inc.php");
require_once("repository/dataExchange/dataExchange.inc.php");

require_once("$srcdir/pnotes.inc.php");
require_once("$srcdir/patient.inc.php");
require_once("$srcdir/acl.inc.php");
require_once("$srcdir/log.inc.php");
require_once("$srcdir/options.inc.php");
require_once("$srcdir/formdata.inc.php");
require_once("$srcdir/classes/Document.class.php");
require_once("$srcdir/gprelations.inc.php");
require_once("$srcdir/formatting.inc.php");

//******************************************************************************
// Reset session count 10 secs = 1 Flop
//******************************************************************************
$_SESSION['site']['flops'] = 0;

// Count records variable
$count = 0;

// Current structure of the record ExtJS Mappings
// informational only
//
// {name: 'noteid', type: 'int', mapping: 'noteid'},
// {name: 'user', type: 'string', mapping: 'user'},
// {name: 'body', type: 'string', mapping: 'body'},
// {name: 'from', type: 'string', mapping: 'from'},
// {name: 'patient', type: 'string', mapping: 'patient'},
// {name: 'type', type: 'string', mapping: 'type'},
// {name: 'date', type: 'string', mapping: 'date'},
// {name: 'status', type: 'string', mapping: 'status'}
// {name: 'reply_to', type: 'int', mapping: 'reply_to'}
//
// Parce the data generated by EXTJS witch is JSON
$data = json_decode ( $_POST['row'] );

if ($noteid) {
	updatePnote($data[0]->noteid, // Internal OpenEMR Function
				$data[0]->body,
				$data[0]->type,
				$data[0]->user,
				$data[0]->status);
	$noteid = '';
} else {
	$noteid = addPnote($data[0]->reply_to, // Internal OpenEMR Function
						$data[0]->body,
						$userauthorized,
						'1',
						$data[0]->type,
						$data[0]->user,
						'',
						$data[0]->status);
}

?>